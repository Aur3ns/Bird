services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # 1) Listeners internes et externes sur deux ports distincts
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      # 2) Comment Docker et ton agent résolvent ces deux listeners
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      # 3) Mapping des protocoles
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"     # pour les containers Docker
      - "29092:29092"   # pour ta machine hôte / Codespace


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.1
    command:
      - elasticsearch
      - -E
      - network.host=0.0.0.0
      - -E
      - discovery.type=single-node
      - -E
      - xpack.security.enabled=false
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    ports:
      - "9200:9200"
    depends_on:
      - kafka
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.1
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      SERVER_HOST: 0.0.0.0
    ports:
      - "5601:5601"
    volumes:
      - kibana-data:/usr/share/kibana/data

  logstash:
    image: docker.elastic.co/logstash/logstash:8.5.1
    depends_on:
      - elasticsearch
      - kafka
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    # plus besoin de TCP 5000 si tu es en kafka-input,
    # tu peux le laisser si tu veux continuer à debug TCP en parallèle
    ports:
      - "5000:5000"

volumes:
  esdata:    # pour les données ES
  kibana-data:  # pour les objets Kibana (saved‑objects)
